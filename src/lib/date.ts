/* For a given date, get the ISO week number
 *
 * Based on information at:
 *
 *    THIS PAGE (DOMAIN EVEN) DOESN'T EXIST ANYMORE UNFORTUNATELY
 *    http://www.merlyn.demon.co.uk/weekcalc.htm#WNR
 *
 * Algorithm is to find nearest thursday, it's year
 * is the year of the week number. Then get weeks
 * between that date and the first day of that year.
 *
 * Note that dates in one year can be weeks of previous
 * or next year, overlap is up to 3 days.
 *
 * e.g. 2014/12/29 is Monday in week  1 of 2015
 *      2012/1/1   is Sunday in week 52 of 2011
 *
 * link: https://stackoverflow.com/questions/6117814/get-week-of-year-in-javascript-like-in-php/6117889#6117889
 */
export function getWeekNumber(d: Date): number {
  if (!(d instanceof Date)) {
    // biome-ignore lint/style/noParameterAssign: it's fine
    d = new Date(d);
  }
  // Copy date so don't modify original
  const newDate = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()));
  // Set to nearest Thursday: current date + 4 - current day number
  // Make Sunday's day number 7
  newDate.setUTCDate(newDate.getUTCDate() + 4 - (newDate.getUTCDay() || 7));
  // Get first day of year
  const yearStart = new Date(Date.UTC(newDate.getUTCFullYear(), 0, 1));
  // Calculate full weeks to nearest Thursday
  // @ts-expect-error - this is a valid operation
  const weekNo = Math.ceil(((newDate - yearStart) / 86400000 + 1) / 7);
  // Return array of year and week number
  return weekNo;
}

// /**
//    * This function was generated by AI, but it's fairly tested and should work
//    */
// export function getWeekNumberInMonth(date: Date) {
//   // Clone the date object to avoid modifying the original
//   const currentDate = new Date(date);

//   // Get the first day of the month
//   const firstDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);

//   // Get the day of the week for the first day (0-6, where 0 is Monday, 6 is Sunday)
//   const firstDayOfWeek = (firstDayOfMonth.getDay() + 6) % 7;

//   // Calculate the date of the Monday of the first week
//   const firstMonday = new Date(firstDayOfMonth);
//   firstMonday.setDate(firstMonday.getDate() - firstDayOfWeek);

//   // Calculate the difference in days and divide by 7 to get the week number
//   // @ts-expect-error - this is a valid operation
//   const daysDifference = (currentDate - firstMonday) / (24 * 60 * 60 * 1000);
//   return Math.floor(daysDifference / 7) + 1;
// }

// https://stackoverflow.com/questions/3280323/get-week-of-the-month#answer-50476817
export function getWeekOfMonth(date: Date) {
  const startWeekDayIndex = 1; // 1 MonthDay 0 Sundays
  const firstDate = new Date(date.getFullYear(), date.getMonth(), 1);
  const firstDay = firstDate.getDay();

  let weekNumber = Math.ceil((date.getDate() + firstDay) / 7);
  if (startWeekDayIndex === 1) {
    if (date.getDay() === 0 && date.getDate() > 1) {
      weekNumber -= 1;
    }

    if (firstDate.getDate() === 1 && firstDay === 0 && date.getDate() > 1) {
      weekNumber += 1;
    }
  }
  return weekNumber;
}
